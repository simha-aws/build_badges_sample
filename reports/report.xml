<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="3c22fb02ef36.ant.amazon.com" name="pytest" skipped="1" tests="19" time="0.074" timestamp="2020-03-25T14:34:51.303187"><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="3" name="test_add[10-7-17]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="3" name="test_add[9-4-13]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="3" name="test_add[-100-76--24]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="3" name="test_add[0-0-0]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="3" name="test_add[10-24-20]" time="0.002"><failure message="assert 34 == 20">num1 = 10, num2 = 24, expected_result = 20

    @pytest.mark.parametrize(&apos;num1, num2, expected_result&apos;,
                        [(10,7,17),
                        (9,4,13),
                        (-100,76,-24),
                        (0,0,0),
                        (10,24,20)
                        ])
    
    def test_add(num1,num2,expected_result):
        result = add(num1,num2)
&gt;       assert(result==expected_result)
E       assert 34 == 20

tests/test_calculator_functions.py:14: AssertionError</failure></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="16" name="test_sub[10-7-3]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="16" name="test_sub[9-4-5]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="16" name="test_sub[-100-76--176]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="16" name="test_sub[0-0-0]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="16" name="test_sub[5--8-13]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="27" name="test_sub_abnormal" time="0.000"><skipped message="skipped test to show how it works" type="pytest.skip">tests/test_calculator_functions.py:27: skipped test to show how it works</skipped></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="32" name="test_multiply[5-6-30]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="32" name="test_multiply[90--3--270]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="32" name="test_multiply[-100--76-7600]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="32" name="test_multiply[0-19-0]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="32" name="test_multiply[-5-8--40]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="45" name="test_divide_normal[9-3-3]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="45" name="test_divide_normal[10-2-5]" time="0.001"></testcase><testcase classname="tests.test_calculator_functions" file="tests/test_calculator_functions.py" line="55" name="test_divide_by_zero" time="0.001"></testcase></testsuite></testsuites>